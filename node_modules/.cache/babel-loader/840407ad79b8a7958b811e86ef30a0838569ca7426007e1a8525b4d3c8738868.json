{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LightBulbToggle=_ref=>{let{isDarkMode,setIsDarkMode}=_ref;const[ropeStretch,setRopeStretch]=useState(0);const[isRopeDragging,setIsRopeDragging]=useState(false);// Handle rope dragging\nconst handleRopeStart=e=>{setIsRopeDragging(true);e.preventDefault();};const handleRopeMove=e=>{if(!isRopeDragging)return;const rect=document.querySelector('.rope-container').getBoundingClientRect();const clientY=e.touches?e.touches[0].clientY:e.clientY;const stretch=Math.max(0,Math.min(100,(clientY-rect.top)/rect.height*100));setRopeStretch(stretch);// Toggle dark mode when rope is stretched more than 60%\nif(stretch>60&&!isDarkMode){setIsDarkMode(true);}else if(stretch<30&&isDarkMode){setIsDarkMode(false);}};const handleRopeEnd=()=>{setIsRopeDragging(false);// Animate rope back to original position\nsetRopeStretch(0);};useEffect(()=>{if(isRopeDragging){document.addEventListener('mousemove',handleRopeMove);document.addEventListener('mouseup',handleRopeEnd);document.addEventListener('touchmove',handleRopeMove);document.addEventListener('touchend',handleRopeEnd);}return()=>{document.removeEventListener('mousemove',handleRopeMove);document.removeEventListener('mouseup',handleRopeEnd);document.removeEventListener('touchmove',handleRopeMove);document.removeEventListener('touchend',handleRopeEnd);};},[isRopeDragging,isDarkMode]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"rope-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rope-mount\"}),/*#__PURE__*/_jsx(\"div\",{className:\"rope\",style:{height:\"\".concat(100+ropeStretch,\"px\"),transform:\"scaleY(\".concat(1+ropeStretch/100,\")\")},onMouseDown:handleRopeStart,onTouchStart:handleRopeStart,children:/*#__PURE__*/_jsx(\"div\",{className:\"rope-segments\",children:[...Array(8)].map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"rope-segment\"},i))})}),/*#__PURE__*/_jsx(\"div\",{className:\"light-bulb\",style:{transform:\"translateY(\".concat(ropeStretch*2,\"px)\"),opacity:isDarkMode?0.3:1},children:\"\\uD83D\\uDCA1\"})]})});};export default LightBulbToggle;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LightBulbToggle","_ref","isDarkMode","setIsDarkMode","ropeStretch","setRopeStretch","isRopeDragging","setIsRopeDragging","handleRopeStart","e","preventDefault","handleRopeMove","rect","document","querySelector","getBoundingClientRect","clientY","touches","stretch","Math","max","min","top","height","handleRopeEnd","addEventListener","removeEventListener","children","className","style","concat","transform","onMouseDown","onTouchStart","Array","map","_","i","opacity"],"sources":["C:/Users/aamp8/OneDrive/Desktop/Projects/personalwebsite/src/LightBulbToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LightBulbToggle = ({ isDarkMode, setIsDarkMode }) => {\r\n  const [ropeStretch, setRopeStretch] = useState(0);\r\n  const [isRopeDragging, setIsRopeDragging] = useState(false);\r\n\r\n  // Handle rope dragging\r\n  const handleRopeStart = (e) => {\r\n    setIsRopeDragging(true);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleRopeMove = (e) => {\r\n    if (!isRopeDragging) return;\r\n    \r\n    const rect = document.querySelector('.rope-container').getBoundingClientRect();\r\n    const clientY = e.touches ? e.touches[0].clientY : e.clientY;\r\n    const stretch = Math.max(0, Math.min(100, ((clientY - rect.top) / rect.height) * 100));\r\n    setRopeStretch(stretch);\r\n    \r\n    // Toggle dark mode when rope is stretched more than 60%\r\n    if (stretch > 60 && !isDarkMode) {\r\n      setIsDarkMode(true);\r\n    } else if (stretch < 30 && isDarkMode) {\r\n      setIsDarkMode(false);\r\n    }\r\n  };\r\n\r\n  const handleRopeEnd = () => {\r\n    setIsRopeDragging(false);\r\n    // Animate rope back to original position\r\n    setRopeStretch(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isRopeDragging) {\r\n      document.addEventListener('mousemove', handleRopeMove);\r\n      document.addEventListener('mouseup', handleRopeEnd);\r\n      document.addEventListener('touchmove', handleRopeMove);\r\n      document.addEventListener('touchend', handleRopeEnd);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleRopeMove);\r\n      document.removeEventListener('mouseup', handleRopeEnd);\r\n      document.removeEventListener('touchmove', handleRopeMove);\r\n      document.removeEventListener('touchend', handleRopeEnd);\r\n    };\r\n  }, [isRopeDragging, isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rope-container\">\r\n        <div className=\"rope-mount\"></div>\r\n        <div\r\n          className=\"rope\"\r\n          style={{\r\n            height: `${100 + ropeStretch}px`,\r\n            transform: `scaleY(${1 + ropeStretch / 100})`,\r\n          }}\r\n          onMouseDown={handleRopeStart}\r\n          onTouchStart={handleRopeStart}\r\n        >\r\n          <div className=\"rope-segments\">\r\n            {[...Array(8)].map((_, i) => (\r\n              <div key={i} className=\"rope-segment\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"light-bulb\"\r\n          style={{\r\n            transform: `translateY(${ropeStretch * 2}px)`,\r\n            opacity: isDarkMode ? 0.3 : 1,\r\n          }}\r\n        >\r\n          ðŸ’¡\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightBulbToggle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}