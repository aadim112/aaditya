{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aamp8\\\\OneDrive\\\\Desktop\\\\Projects\\\\personalwebsite\\\\src\\\\LightBulbToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LightBulbToggle = ({\n  isDarkMode,\n  setIsDarkMode\n}) => {\n  _s();\n  const [ropeStretch, setRopeStretch] = useState(0);\n  const [isRopeDragging, setIsRopeDragging] = useState(false);\n\n  // Handle rope dragging\n  const handleRopeStart = e => {\n    setIsRopeDragging(true);\n    e.preventDefault();\n  };\n  const handleRopeMove = e => {\n    if (!isRopeDragging) return;\n    const rect = document.querySelector('.rope-container').getBoundingClientRect();\n    const clientY = e.touches ? e.touches[0].clientY : e.clientY;\n    const stretch = Math.max(0, Math.min(100, (clientY - rect.top) / rect.height * 100));\n    setRopeStretch(stretch);\n\n    // Toggle dark mode when rope is stretched more than 60%\n    if (stretch > 60 && !isDarkMode) {\n      setIsDarkMode(true);\n    } else if (stretch < 30 && isDarkMode) {\n      setIsDarkMode(false);\n    }\n  };\n  const handleRopeEnd = () => {\n    setIsRopeDragging(false);\n    // Animate rope back to original position\n    setRopeStretch(0);\n  };\n  useEffect(() => {\n    if (isRopeDragging) {\n      document.addEventListener('mousemove', handleRopeMove);\n      document.addEventListener('mouseup', handleRopeEnd);\n      document.addEventListener('touchmove', handleRopeMove);\n      document.addEventListener('touchend', handleRopeEnd);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleRopeMove);\n      document.removeEventListener('mouseup', handleRopeEnd);\n      document.removeEventListener('touchmove', handleRopeMove);\n      document.removeEventListener('touchend', handleRopeEnd);\n    };\n  }, [isRopeDragging, isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rope-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rope-mount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rope\",\n        style: {\n          height: `${100 + ropeStretch}px`,\n          transform: `scaleY(${1 + ropeStretch / 100})`\n        },\n        onMouseDown: handleRopeStart,\n        onTouchStart: handleRopeStart,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rope-segments\",\n          children: [...Array(8)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rope-segment\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"light-bulb\",\n        style: {\n          transform: `translateY(${ropeStretch * 2}px)`,\n          opacity: isDarkMode ? 0.3 : 1\n        },\n        children: \"\\uD83D\\uDCA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LightBulbToggle, \"y+y13yWwEQI3abq+vr8ZXUp4EwY=\");\n_c = LightBulbToggle;\nexport default LightBulbToggle;\nvar _c;\n$RefreshReg$(_c, \"LightBulbToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","LightBulbToggle","isDarkMode","setIsDarkMode","_s","ropeStretch","setRopeStretch","isRopeDragging","setIsRopeDragging","handleRopeStart","e","preventDefault","handleRopeMove","rect","document","querySelector","getBoundingClientRect","clientY","touches","stretch","Math","max","min","top","height","handleRopeEnd","addEventListener","removeEventListener","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","onMouseDown","onTouchStart","Array","map","_","i","opacity","_c","$RefreshReg$"],"sources":["C:/Users/aamp8/OneDrive/Desktop/Projects/personalwebsite/src/LightBulbToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LightBulbToggle = ({ isDarkMode, setIsDarkMode }) => {\r\n  const [ropeStretch, setRopeStretch] = useState(0);\r\n  const [isRopeDragging, setIsRopeDragging] = useState(false);\r\n\r\n  // Handle rope dragging\r\n  const handleRopeStart = (e) => {\r\n    setIsRopeDragging(true);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleRopeMove = (e) => {\r\n    if (!isRopeDragging) return;\r\n    \r\n    const rect = document.querySelector('.rope-container').getBoundingClientRect();\r\n    const clientY = e.touches ? e.touches[0].clientY : e.clientY;\r\n    const stretch = Math.max(0, Math.min(100, ((clientY - rect.top) / rect.height) * 100));\r\n    setRopeStretch(stretch);\r\n    \r\n    // Toggle dark mode when rope is stretched more than 60%\r\n    if (stretch > 60 && !isDarkMode) {\r\n      setIsDarkMode(true);\r\n    } else if (stretch < 30 && isDarkMode) {\r\n      setIsDarkMode(false);\r\n    }\r\n  };\r\n\r\n  const handleRopeEnd = () => {\r\n    setIsRopeDragging(false);\r\n    // Animate rope back to original position\r\n    setRopeStretch(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isRopeDragging) {\r\n      document.addEventListener('mousemove', handleRopeMove);\r\n      document.addEventListener('mouseup', handleRopeEnd);\r\n      document.addEventListener('touchmove', handleRopeMove);\r\n      document.addEventListener('touchend', handleRopeEnd);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleRopeMove);\r\n      document.removeEventListener('mouseup', handleRopeEnd);\r\n      document.removeEventListener('touchmove', handleRopeMove);\r\n      document.removeEventListener('touchend', handleRopeEnd);\r\n    };\r\n  }, [isRopeDragging, isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rope-container\">\r\n        <div className=\"rope-mount\"></div>\r\n        <div\r\n          className=\"rope\"\r\n          style={{\r\n            height: `${100 + ropeStretch}px`,\r\n            transform: `scaleY(${1 + ropeStretch / 100})`,\r\n          }}\r\n          onMouseDown={handleRopeStart}\r\n          onTouchStart={handleRopeStart}\r\n        >\r\n          <div className=\"rope-segments\">\r\n            {[...Array(8)].map((_, i) => (\r\n              <div key={i} className=\"rope-segment\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"light-bulb\"\r\n          style={{\r\n            transform: `translateY(${ropeStretch * 2}px)`,\r\n            opacity: isDarkMode ? 0.3 : 1,\r\n          }}\r\n        >\r\n          ðŸ’¡\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightBulbToggle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}